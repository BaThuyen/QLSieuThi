#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="S_market")]
	public partial class SmarketDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCT_HD(CT_HD instance);
    partial void UpdateCT_HD(CT_HD instance);
    partial void DeleteCT_HD(CT_HD instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHIEUNHAP(PHIEUNHAP instance);
    partial void UpdatePHIEUNHAP(PHIEUNHAP instance);
    partial void DeletePHIEUNHAP(PHIEUNHAP instance);
    partial void InsertPHIEUXUAT(PHIEUXUAT instance);
    partial void UpdatePHIEUXUAT(PHIEUXUAT instance);
    partial void DeletePHIEUXUAT(PHIEUXUAT instance);
    partial void InsertCT_PN(CT_PN instance);
    partial void UpdateCT_PN(CT_PN instance);
    partial void DeleteCT_PN(CT_PN instance);
    partial void InsertHOADONBAN(HOADONBAN instance);
    partial void UpdateHOADONBAN(HOADONBAN instance);
    partial void DeleteHOADONBAN(HOADONBAN instance);
    partial void InsertCT_PX(CT_PX instance);
    partial void UpdateCT_PX(CT_PX instance);
    partial void DeleteCT_PX(CT_PX instance);
    partial void InsertHANGHOA(HANGHOA instance);
    partial void UpdateHANGHOA(HANGHOA instance);
    partial void DeleteHANGHOA(HANGHOA instance);
    partial void InsertLOAIHANG(LOAIHANG instance);
    partial void UpdateLOAIHANG(LOAIHANG instance);
    partial void DeleteLOAIHANG(LOAIHANG instance);
    partial void InsertNCC(NCC instance);
    partial void UpdateNCC(NCC instance);
    partial void DeleteNCC(NCC instance);
    partial void InsertQUAYHANG(QUAYHANG instance);
    partial void UpdateQUAYHANG(QUAYHANG instance);
    partial void DeleteQUAYHANG(QUAYHANG instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    #endregion
		
		public SmarketDataContext() : 
				base(global::DataAccessLayer.Properties.Settings.Default.S_marketConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SmarketDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SmarketDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SmarketDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SmarketDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CT_HD> CT_HDs
		{
			get
			{
				return this.GetTable<CT_HD>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this.GetTable<PHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUXUAT> PHIEUXUATs
		{
			get
			{
				return this.GetTable<PHIEUXUAT>();
			}
		}
		
		public System.Data.Linq.Table<CT_PN> CT_PNs
		{
			get
			{
				return this.GetTable<CT_PN>();
			}
		}
		
		public System.Data.Linq.Table<HOADONBAN> HOADONBANs
		{
			get
			{
				return this.GetTable<HOADONBAN>();
			}
		}
		
		public System.Data.Linq.Table<CT_PX> CT_PXes
		{
			get
			{
				return this.GetTable<CT_PX>();
			}
		}
		
		public System.Data.Linq.Table<HANGHOA> HANGHOAs
		{
			get
			{
				return this.GetTable<HANGHOA>();
			}
		}
		
		public System.Data.Linq.Table<LOAIHANG> LOAIHANGs
		{
			get
			{
				return this.GetTable<LOAIHANG>();
			}
		}
		
		public System.Data.Linq.Table<NCC> NCCs
		{
			get
			{
				return this.GetTable<NCC>();
			}
		}
		
		public System.Data.Linq.Table<QUAYHANG> QUAYHANGs
		{
			get
			{
				return this.GetTable<QUAYHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HD")]
	public partial class CT_HD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private string _MaHH;
		
		private double _SLuong;
		
		private double _DonGia;
		
		private double _VAT;
		
		private double _ThanhTien;
		
		private EntityRef<HOADONBAN> _HOADONBAN;
		
		private EntityRef<HANGHOA> _HANGHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnMaHHChanging(string value);
    partial void OnMaHHChanged();
    partial void OnSLuongChanging(double value);
    partial void OnSLuongChanged();
    partial void OnDonGiaChanging(double value);
    partial void OnDonGiaChanged();
    partial void OnVATChanging(double value);
    partial void OnVATChanged();
    partial void OnThanhTienChanging(double value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CT_HD()
		{
			this._HOADONBAN = default(EntityRef<HOADONBAN>);
			this._HANGHOA = default(EntityRef<HANGHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HOADONBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHH", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHH
		{
			get
			{
				return this._MaHH;
			}
			set
			{
				if ((this._MaHH != value))
				{
					if (this._HANGHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHHChanging(value);
					this.SendPropertyChanging();
					this._MaHH = value;
					this.SendPropertyChanged("MaHH");
					this.OnMaHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLuong", DbType="Float NOT NULL")]
		public double SLuong
		{
			get
			{
				return this._SLuong;
			}
			set
			{
				if ((this._SLuong != value))
				{
					this.OnSLuongChanging(value);
					this.SendPropertyChanging();
					this._SLuong = value;
					this.SendPropertyChanged("SLuong");
					this.OnSLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float NOT NULL")]
		public double DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VAT", DbType="Float NOT NULL")]
		public double VAT
		{
			get
			{
				return this._VAT;
			}
			set
			{
				if ((this._VAT != value))
				{
					this.OnVATChanging(value);
					this.SendPropertyChanging();
					this._VAT = value;
					this.SendPropertyChanged("VAT");
					this.OnVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float NOT NULL")]
		public double ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADONBAN_CT_HD", Storage="_HOADONBAN", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HOADONBAN HOADONBAN
		{
			get
			{
				return this._HOADONBAN.Entity;
			}
			set
			{
				HOADONBAN previousValue = this._HOADONBAN.Entity;
				if (((previousValue != value) 
							|| (this._HOADONBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADONBAN.Entity = null;
						previousValue.CT_HDs.Remove(this);
					}
					this._HOADONBAN.Entity = value;
					if ((value != null))
					{
						value.CT_HDs.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HOADONBAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_CT_HD", Storage="_HANGHOA", ThisKey="MaHH", OtherKey="MaHH", IsForeignKey=true)]
		public HANGHOA HANGHOA
		{
			get
			{
				return this._HANGHOA.Entity;
			}
			set
			{
				HANGHOA previousValue = this._HANGHOA.Entity;
				if (((previousValue != value) 
							|| (this._HANGHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGHOA.Entity = null;
						previousValue.CT_HDs.Remove(this);
					}
					this._HANGHOA.Entity = value;
					if ((value != null))
					{
						value.CT_HDs.Add(this);
						this._MaHH = value.MaHH;
					}
					else
					{
						this._MaHH = default(string);
					}
					this.SendPropertyChanged("HANGHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _TenNV;
		
		private string _GioiTinh;
		
		private System.DateTime _NgaySinh;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private string _MatKhau;
		
		private string _ChucVu;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntitySet<PHIEUXUAT> _PHIEUXUATs;
		
		private EntitySet<HOADONBAN> _HOADONBANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._PHIEUXUATs = new EntitySet<PHIEUXUAT>(new Action<PHIEUXUAT>(this.attach_PHIEUXUATs), new Action<PHIEUXUAT>(this.detach_PHIEUXUATs));
			this._HOADONBANs = new EntitySet<HOADONBAN>(new Action<HOADONBAN>(this.attach_HOADONBANs), new Action<HOADONBAN>(this.detach_HOADONBANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(39) NOT NULL", CanBeNull=false)]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NChar(15) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NChar(10)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="MaNV", OtherKey="MaNCC")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUXUAT", Storage="_PHIEUXUATs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PHIEUXUAT> PHIEUXUATs
		{
			get
			{
				return this._PHIEUXUATs;
			}
			set
			{
				this._PHIEUXUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADONBAN", Storage="_HOADONBANs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<HOADONBAN> HOADONBANs
		{
			get
			{
				return this._HOADONBANs;
			}
			set
			{
				this._HOADONBANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUXUATs(PHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUXUATs(PHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_HOADONBANs(HOADONBAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONBANs(HOADONBAN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAP")]
	public partial class PHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPN;
		
		private string _MaNCC;
		
		private string _MaNV;
		
		private System.DateTime _NgayNhap;
		
		private double _TongTienPN;
		
		private EntitySet<CT_PN> _CT_PNs;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<NCC> _NCC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPNChanging(string value);
    partial void OnMaPNChanged();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnNgayNhapChanging(System.DateTime value);
    partial void OnNgayNhapChanged();
    partial void OnTongTienPNChanging(double value);
    partial void OnTongTienPNChanged();
    #endregion
		
		public PHIEUNHAP()
		{
			this._CT_PNs = new EntitySet<CT_PN>(new Action<CT_PN>(this.attach_CT_PNs), new Action<CT_PN>(this.detach_CT_PNs));
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._NCC = default(EntityRef<NCC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPN", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPN
		{
			get
			{
				return this._MaPN;
			}
			set
			{
				if ((this._MaPN != value))
				{
					this.OnMaPNChanging(value);
					this.SendPropertyChanging();
					this._MaPN = value;
					this.SendPropertyChanged("MaPN");
					this.OnMaPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					if ((this._NHANVIEN.HasLoadedOrAssignedValue || this._NCC.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="DateTime NOT NULL")]
		public System.DateTime NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTienPN", DbType="Float NOT NULL")]
		public double TongTienPN
		{
			get
			{
				return this._TongTienPN;
			}
			set
			{
				if ((this._TongTienPN != value))
				{
					this.OnTongTienPNChanging(value);
					this.SendPropertyChanging();
					this._TongTienPN = value;
					this.SendPropertyChanged("TongTienPN");
					this.OnTongTienPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CT_PN", Storage="_CT_PNs", ThisKey="MaPN", OtherKey="MaPN")]
		public EntitySet<CT_PN> CT_PNs
		{
			get
			{
				return this._CT_PNs;
			}
			set
			{
				this._CT_PNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_NHANVIEN", ThisKey="MaNCC", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._MaNCC = value.MaNV;
					}
					else
					{
						this._MaNCC = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCC_PHIEUNHAP", Storage="_NCC", ThisKey="MaNCC", OtherKey="MaNCC", IsForeignKey=true)]
		public NCC NCC
		{
			get
			{
				return this._NCC.Entity;
			}
			set
			{
				NCC previousValue = this._NCC.Entity;
				if (((previousValue != value) 
							|| (this._NCC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NCC.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NCC.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._MaNCC = value.MaNCC;
					}
					else
					{
						this._MaNCC = default(string);
					}
					this.SendPropertyChanged("NCC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_PNs(CT_PN entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = this;
		}
		
		private void detach_CT_PNs(CT_PN entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUXUAT")]
	public partial class PHIEUXUAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPX;
		
		private string _MaNV;
		
		private System.DateTime _NgayXuat;
		
		private EntitySet<CT_PX> _CT_PXes;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPXChanging(string value);
    partial void OnMaPXChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnNgayXuatChanging(System.DateTime value);
    partial void OnNgayXuatChanged();
    #endregion
		
		public PHIEUXUAT()
		{
			this._CT_PXes = new EntitySet<CT_PX>(new Action<CT_PX>(this.attach_CT_PXes), new Action<CT_PX>(this.detach_CT_PXes));
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPX", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPX
		{
			get
			{
				return this._MaPX;
			}
			set
			{
				if ((this._MaPX != value))
				{
					this.OnMaPXChanging(value);
					this.SendPropertyChanging();
					this._MaPX = value;
					this.SendPropertyChanged("MaPX");
					this.OnMaPXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayXuat", DbType="DateTime NOT NULL")]
		public System.DateTime NgayXuat
		{
			get
			{
				return this._NgayXuat;
			}
			set
			{
				if ((this._NgayXuat != value))
				{
					this.OnNgayXuatChanging(value);
					this.SendPropertyChanging();
					this._NgayXuat = value;
					this.SendPropertyChanged("NgayXuat");
					this.OnNgayXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUXUAT_CT_PX", Storage="_CT_PXes", ThisKey="MaPX", OtherKey="MaPX")]
		public EntitySet<CT_PX> CT_PXes
		{
			get
			{
				return this._CT_PXes;
			}
			set
			{
				this._CT_PXes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUXUAT", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUXUATs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUXUATs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_PXes(CT_PX entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUXUAT = this;
		}
		
		private void detach_CT_PXes(CT_PX entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUXUAT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_PN")]
	public partial class CT_PN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPN;
		
		private string _MaHH;
		
		private double _SLuong;
		
		private double _ChietKhau;
		
		private double _DonGia;
		
		private EntityRef<PHIEUNHAP> _PHIEUNHAP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPNChanging(string value);
    partial void OnMaPNChanged();
    partial void OnMaHHChanging(string value);
    partial void OnMaHHChanged();
    partial void OnSLuongChanging(double value);
    partial void OnSLuongChanged();
    partial void OnChietKhauChanging(double value);
    partial void OnChietKhauChanged();
    partial void OnDonGiaChanging(double value);
    partial void OnDonGiaChanged();
    #endregion
		
		public CT_PN()
		{
			this._PHIEUNHAP = default(EntityRef<PHIEUNHAP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPN", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPN
		{
			get
			{
				return this._MaPN;
			}
			set
			{
				if ((this._MaPN != value))
				{
					if (this._PHIEUNHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPNChanging(value);
					this.SendPropertyChanging();
					this._MaPN = value;
					this.SendPropertyChanged("MaPN");
					this.OnMaPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHH", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHH
		{
			get
			{
				return this._MaHH;
			}
			set
			{
				if ((this._MaHH != value))
				{
					this.OnMaHHChanging(value);
					this.SendPropertyChanging();
					this._MaHH = value;
					this.SendPropertyChanged("MaHH");
					this.OnMaHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLuong", DbType="Float NOT NULL")]
		public double SLuong
		{
			get
			{
				return this._SLuong;
			}
			set
			{
				if ((this._SLuong != value))
				{
					this.OnSLuongChanging(value);
					this.SendPropertyChanging();
					this._SLuong = value;
					this.SendPropertyChanged("SLuong");
					this.OnSLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChietKhau", DbType="Float NOT NULL")]
		public double ChietKhau
		{
			get
			{
				return this._ChietKhau;
			}
			set
			{
				if ((this._ChietKhau != value))
				{
					this.OnChietKhauChanging(value);
					this.SendPropertyChanging();
					this._ChietKhau = value;
					this.SendPropertyChanged("ChietKhau");
					this.OnChietKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float NOT NULL")]
		public double DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CT_PN", Storage="_PHIEUNHAP", ThisKey="MaPN", OtherKey="MaPN", IsForeignKey=true)]
		public PHIEUNHAP PHIEUNHAP
		{
			get
			{
				return this._PHIEUNHAP.Entity;
			}
			set
			{
				PHIEUNHAP previousValue = this._PHIEUNHAP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAP.Entity = null;
						previousValue.CT_PNs.Remove(this);
					}
					this._PHIEUNHAP.Entity = value;
					if ((value != null))
					{
						value.CT_PNs.Add(this);
						this._MaPN = value.MaPN;
					}
					else
					{
						this._MaPN = default(string);
					}
					this.SendPropertyChanged("PHIEUNHAP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADONBAN")]
	public partial class HOADONBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private string _MaNV;
		
		private string _MaKH;
		
		private System.DateTime _NgayBan;
		
		private double _TongTienBan;
		
		private EntitySet<CT_HD> _CT_HDs;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnNgayBanChanging(System.DateTime value);
    partial void OnNgayBanChanged();
    partial void OnTongTienBanChanging(double value);
    partial void OnTongTienBanChanged();
    #endregion
		
		public HOADONBAN()
		{
			this._CT_HDs = new EntitySet<CT_HD>(new Action<CT_HD>(this.attach_CT_HDs), new Action<CT_HD>(this.detach_CT_HDs));
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="NChar(10)")]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBan", DbType="DateTime NOT NULL")]
		public System.DateTime NgayBan
		{
			get
			{
				return this._NgayBan;
			}
			set
			{
				if ((this._NgayBan != value))
				{
					this.OnNgayBanChanging(value);
					this.SendPropertyChanging();
					this._NgayBan = value;
					this.SendPropertyChanged("NgayBan");
					this.OnNgayBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTienBan", DbType="Float NOT NULL")]
		public double TongTienBan
		{
			get
			{
				return this._TongTienBan;
			}
			set
			{
				if ((this._TongTienBan != value))
				{
					this.OnTongTienBanChanging(value);
					this.SendPropertyChanging();
					this._TongTienBan = value;
					this.SendPropertyChanged("TongTienBan");
					this.OnTongTienBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADONBAN_CT_HD", Storage="_CT_HDs", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<CT_HD> CT_HDs
		{
			get
			{
				return this._CT_HDs;
			}
			set
			{
				this._CT_HDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADONBAN", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONBANs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONBANs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADONBAN", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONBANs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONBANs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HDs(CT_HD entity)
		{
			this.SendPropertyChanging();
			entity.HOADONBAN = this;
		}
		
		private void detach_CT_HDs(CT_HD entity)
		{
			this.SendPropertyChanging();
			entity.HOADONBAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_PX")]
	public partial class CT_PX : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPX;
		
		private string _MaHH;
		
		private double _SLuong;
		
		private EntityRef<PHIEUXUAT> _PHIEUXUAT;
		
		private EntityRef<HANGHOA> _HANGHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPXChanging(string value);
    partial void OnMaPXChanged();
    partial void OnMaHHChanging(string value);
    partial void OnMaHHChanged();
    partial void OnSLuongChanging(double value);
    partial void OnSLuongChanged();
    #endregion
		
		public CT_PX()
		{
			this._PHIEUXUAT = default(EntityRef<PHIEUXUAT>);
			this._HANGHOA = default(EntityRef<HANGHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPX", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPX
		{
			get
			{
				return this._MaPX;
			}
			set
			{
				if ((this._MaPX != value))
				{
					if (this._PHIEUXUAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPXChanging(value);
					this.SendPropertyChanging();
					this._MaPX = value;
					this.SendPropertyChanged("MaPX");
					this.OnMaPXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHH", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHH
		{
			get
			{
				return this._MaHH;
			}
			set
			{
				if ((this._MaHH != value))
				{
					if (this._HANGHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHHChanging(value);
					this.SendPropertyChanging();
					this._MaHH = value;
					this.SendPropertyChanged("MaHH");
					this.OnMaHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLuong", DbType="Float NOT NULL")]
		public double SLuong
		{
			get
			{
				return this._SLuong;
			}
			set
			{
				if ((this._SLuong != value))
				{
					this.OnSLuongChanging(value);
					this.SendPropertyChanging();
					this._SLuong = value;
					this.SendPropertyChanged("SLuong");
					this.OnSLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUXUAT_CT_PX", Storage="_PHIEUXUAT", ThisKey="MaPX", OtherKey="MaPX", IsForeignKey=true)]
		public PHIEUXUAT PHIEUXUAT
		{
			get
			{
				return this._PHIEUXUAT.Entity;
			}
			set
			{
				PHIEUXUAT previousValue = this._PHIEUXUAT.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUXUAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUXUAT.Entity = null;
						previousValue.CT_PXes.Remove(this);
					}
					this._PHIEUXUAT.Entity = value;
					if ((value != null))
					{
						value.CT_PXes.Add(this);
						this._MaPX = value.MaPX;
					}
					else
					{
						this._MaPX = default(string);
					}
					this.SendPropertyChanged("PHIEUXUAT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_CT_PX", Storage="_HANGHOA", ThisKey="MaHH", OtherKey="MaHH", IsForeignKey=true)]
		public HANGHOA HANGHOA
		{
			get
			{
				return this._HANGHOA.Entity;
			}
			set
			{
				HANGHOA previousValue = this._HANGHOA.Entity;
				if (((previousValue != value) 
							|| (this._HANGHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGHOA.Entity = null;
						previousValue.CT_PXes.Remove(this);
					}
					this._HANGHOA.Entity = value;
					if ((value != null))
					{
						value.CT_PXes.Add(this);
						this._MaHH = value.MaHH;
					}
					else
					{
						this._MaHH = default(string);
					}
					this.SendPropertyChanged("HANGHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANGHOA")]
	public partial class HANGHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHH;
		
		private string _TenHH;
		
		private double _KhoiLuongTinh;
		
		private System.DateTime _HanSD;
		
		private string _NhaSX;
		
		private string _MaLH;
		
		private EntitySet<CT_HD> _CT_HDs;
		
		private EntitySet<CT_PX> _CT_PXes;
		
		private EntityRef<LOAIHANG> _LOAIHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHHChanging(string value);
    partial void OnMaHHChanged();
    partial void OnTenHHChanging(string value);
    partial void OnTenHHChanged();
    partial void OnKhoiLuongTinhChanging(double value);
    partial void OnKhoiLuongTinhChanged();
    partial void OnHanSDChanging(System.DateTime value);
    partial void OnHanSDChanged();
    partial void OnNhaSXChanging(string value);
    partial void OnNhaSXChanged();
    partial void OnMaLHChanging(string value);
    partial void OnMaLHChanged();
    #endregion
		
		public HANGHOA()
		{
			this._CT_HDs = new EntitySet<CT_HD>(new Action<CT_HD>(this.attach_CT_HDs), new Action<CT_HD>(this.detach_CT_HDs));
			this._CT_PXes = new EntitySet<CT_PX>(new Action<CT_PX>(this.attach_CT_PXes), new Action<CT_PX>(this.detach_CT_PXes));
			this._LOAIHANG = default(EntityRef<LOAIHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHH", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHH
		{
			get
			{
				return this._MaHH;
			}
			set
			{
				if ((this._MaHH != value))
				{
					this.OnMaHHChanging(value);
					this.SendPropertyChanging();
					this._MaHH = value;
					this.SendPropertyChanged("MaHH");
					this.OnMaHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHH", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string TenHH
		{
			get
			{
				return this._TenHH;
			}
			set
			{
				if ((this._TenHH != value))
				{
					this.OnTenHHChanging(value);
					this.SendPropertyChanging();
					this._TenHH = value;
					this.SendPropertyChanged("TenHH");
					this.OnTenHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhoiLuongTinh", DbType="Float NOT NULL")]
		public double KhoiLuongTinh
		{
			get
			{
				return this._KhoiLuongTinh;
			}
			set
			{
				if ((this._KhoiLuongTinh != value))
				{
					this.OnKhoiLuongTinhChanging(value);
					this.SendPropertyChanging();
					this._KhoiLuongTinh = value;
					this.SendPropertyChanged("KhoiLuongTinh");
					this.OnKhoiLuongTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HanSD", DbType="DateTime NOT NULL")]
		public System.DateTime HanSD
		{
			get
			{
				return this._HanSD;
			}
			set
			{
				if ((this._HanSD != value))
				{
					this.OnHanSDChanging(value);
					this.SendPropertyChanging();
					this._HanSD = value;
					this.SendPropertyChanged("HanSD");
					this.OnHanSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhaSX", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string NhaSX
		{
			get
			{
				return this._NhaSX;
			}
			set
			{
				if ((this._NhaSX != value))
				{
					this.OnNhaSXChanging(value);
					this.SendPropertyChanging();
					this._NhaSX = value;
					this.SendPropertyChanged("NhaSX");
					this.OnNhaSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLH", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaLH
		{
			get
			{
				return this._MaLH;
			}
			set
			{
				if ((this._MaLH != value))
				{
					if (this._LOAIHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLHChanging(value);
					this.SendPropertyChanging();
					this._MaLH = value;
					this.SendPropertyChanged("MaLH");
					this.OnMaLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_CT_HD", Storage="_CT_HDs", ThisKey="MaHH", OtherKey="MaHH")]
		public EntitySet<CT_HD> CT_HDs
		{
			get
			{
				return this._CT_HDs;
			}
			set
			{
				this._CT_HDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_CT_PX", Storage="_CT_PXes", ThisKey="MaHH", OtherKey="MaHH")]
		public EntitySet<CT_PX> CT_PXes
		{
			get
			{
				return this._CT_PXes;
			}
			set
			{
				this._CT_PXes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIHANG_HANGHOA", Storage="_LOAIHANG", ThisKey="MaLH", OtherKey="MaLH", IsForeignKey=true)]
		public LOAIHANG LOAIHANG
		{
			get
			{
				return this._LOAIHANG.Entity;
			}
			set
			{
				LOAIHANG previousValue = this._LOAIHANG.Entity;
				if (((previousValue != value) 
							|| (this._LOAIHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIHANG.Entity = null;
						previousValue.HANGHOAs.Remove(this);
					}
					this._LOAIHANG.Entity = value;
					if ((value != null))
					{
						value.HANGHOAs.Add(this);
						this._MaLH = value.MaLH;
					}
					else
					{
						this._MaLH = default(string);
					}
					this.SendPropertyChanged("LOAIHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HDs(CT_HD entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = this;
		}
		
		private void detach_CT_HDs(CT_HD entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = null;
		}
		
		private void attach_CT_PXes(CT_PX entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = this;
		}
		
		private void detach_CT_PXes(CT_PX entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIHANG")]
	public partial class LOAIHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLH;
		
		private string _TenLH;
		
		private string _MaQH;
		
		private EntitySet<HANGHOA> _HANGHOAs;
		
		private EntityRef<QUAYHANG> _QUAYHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLHChanging(string value);
    partial void OnMaLHChanged();
    partial void OnTenLHChanging(string value);
    partial void OnTenLHChanged();
    partial void OnMaQHChanging(string value);
    partial void OnMaQHChanged();
    #endregion
		
		public LOAIHANG()
		{
			this._HANGHOAs = new EntitySet<HANGHOA>(new Action<HANGHOA>(this.attach_HANGHOAs), new Action<HANGHOA>(this.detach_HANGHOAs));
			this._QUAYHANG = default(EntityRef<QUAYHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLH", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLH
		{
			get
			{
				return this._MaLH;
			}
			set
			{
				if ((this._MaLH != value))
				{
					this.OnMaLHChanging(value);
					this.SendPropertyChanging();
					this._MaLH = value;
					this.SendPropertyChanged("MaLH");
					this.OnMaLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLH", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenLH
		{
			get
			{
				return this._TenLH;
			}
			set
			{
				if ((this._TenLH != value))
				{
					this.OnTenLHChanging(value);
					this.SendPropertyChanging();
					this._TenLH = value;
					this.SendPropertyChanged("TenLH");
					this.OnTenLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQH", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string MaQH
		{
			get
			{
				return this._MaQH;
			}
			set
			{
				if ((this._MaQH != value))
				{
					if (this._QUAYHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQHChanging(value);
					this.SendPropertyChanging();
					this._MaQH = value;
					this.SendPropertyChanged("MaQH");
					this.OnMaQHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIHANG_HANGHOA", Storage="_HANGHOAs", ThisKey="MaLH", OtherKey="MaLH")]
		public EntitySet<HANGHOA> HANGHOAs
		{
			get
			{
				return this._HANGHOAs;
			}
			set
			{
				this._HANGHOAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUAYHANG_LOAIHANG", Storage="_QUAYHANG", ThisKey="MaQH", OtherKey="MaQH", IsForeignKey=true)]
		public QUAYHANG QUAYHANG
		{
			get
			{
				return this._QUAYHANG.Entity;
			}
			set
			{
				QUAYHANG previousValue = this._QUAYHANG.Entity;
				if (((previousValue != value) 
							|| (this._QUAYHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUAYHANG.Entity = null;
						previousValue.LOAIHANGs.Remove(this);
					}
					this._QUAYHANG.Entity = value;
					if ((value != null))
					{
						value.LOAIHANGs.Add(this);
						this._MaQH = value.MaQH;
					}
					else
					{
						this._MaQH = default(string);
					}
					this.SendPropertyChanged("QUAYHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HANGHOAs(HANGHOA entity)
		{
			this.SendPropertyChanging();
			entity.LOAIHANG = this;
		}
		
		private void detach_HANGHOAs(HANGHOA entity)
		{
			this.SendPropertyChanging();
			entity.LOAIHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NCC")]
	public partial class NCC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNCC;
		
		private string _tenNCC;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private string _email;
		
		private string _fax;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    partial void OntenNCCChanging(string value);
    partial void OntenNCCChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    #endregion
		
		public NCC()
		{
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNCC", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string tenNCC
		{
			get
			{
				return this._tenNCC;
			}
			set
			{
				if ((this._tenNCC != value))
				{
					this.OntenNCCChanging(value);
					this.SendPropertyChanging();
					this._tenNCC = value;
					this.SendPropertyChanged("tenNCC");
					this.OntenNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NChar(15) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NChar(20)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="NChar(10)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCC_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="MaNCC", OtherKey="MaNCC")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NCC = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NCC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUAYHANG")]
	public partial class QUAYHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaQH;
		
		private string _TenQH;
		
		private EntitySet<LOAIHANG> _LOAIHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQHChanging(string value);
    partial void OnMaQHChanged();
    partial void OnTenQHChanging(string value);
    partial void OnTenQHChanged();
    #endregion
		
		public QUAYHANG()
		{
			this._LOAIHANGs = new EntitySet<LOAIHANG>(new Action<LOAIHANG>(this.attach_LOAIHANGs), new Action<LOAIHANG>(this.detach_LOAIHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQH", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaQH
		{
			get
			{
				return this._MaQH;
			}
			set
			{
				if ((this._MaQH != value))
				{
					this.OnMaQHChanging(value);
					this.SendPropertyChanging();
					this._MaQH = value;
					this.SendPropertyChanged("MaQH");
					this.OnMaQHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQH", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenQH
		{
			get
			{
				return this._TenQH;
			}
			set
			{
				if ((this._TenQH != value))
				{
					this.OnTenQHChanging(value);
					this.SendPropertyChanging();
					this._TenQH = value;
					this.SendPropertyChanged("TenQH");
					this.OnTenQHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUAYHANG_LOAIHANG", Storage="_LOAIHANGs", ThisKey="MaQH", OtherKey="MaQH")]
		public EntitySet<LOAIHANG> LOAIHANGs
		{
			get
			{
				return this._LOAIHANGs;
			}
			set
			{
				this._LOAIHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LOAIHANGs(LOAIHANG entity)
		{
			this.SendPropertyChanging();
			entity.QUAYHANG = this;
		}
		
		private void detach_LOAIHANGs(LOAIHANG entity)
		{
			this.SendPropertyChanging();
			entity.QUAYHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKH;
		
		private string _TenKH;
		
		private string _GioiTinh;
		
		private System.DateTime _NgaySinh;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private EntitySet<HOADONBAN> _HOADONBANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONBANs = new EntitySet<HOADONBAN>(new Action<HOADONBAN>(this.attach_HOADONBANs), new Action<HOADONBAN>(this.detach_HOADONBANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADONBAN", Storage="_HOADONBANs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<HOADONBAN> HOADONBANs
		{
			get
			{
				return this._HOADONBANs;
			}
			set
			{
				this._HOADONBANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONBANs(HOADONBAN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONBANs(HOADONBAN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
}
#pragma warning restore 1591
